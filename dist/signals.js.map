{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "index.js",
    "lib/signal.js",
    "lib/slot.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "exports.signal = require('./lib/signal');\nexports.slot = require('./lib/slot');",
    "/**\n * Creates a new signal.\n *\n * @param name The optional name of the signal displayed in error messages.\n */\nmodule.exports = function (name) {\n    var signal, handlers = [];\n    name = String(name || '') || 'Unknown';\n\n    return signal = {\n        emit: function () {\n            var args = [].slice.call(arguments);\n            handlers.forEach(function (handler) {\n                handler.apply(undefined, args);\n            });\n        },\n        \n        connect: function (handler, thisObj) {\n            var proxyHandler = function () {\n                var args = [].slice.call(arguments);\n                handler.apply(thisObj, args);\n            };\n            handlers.push(proxyHandler);\n            return {\n                disconnect: function () {\n                    if (handler) {\n                        handler = null;\n                        var k = handlers.indexOf(proxyHandler);\n                        handlers.splice(k, 1);\n                        proxyHandler = null;\n                    }\n                }\n            };\n        },\n        \n        lock: function (key) {\n            return {\n                connect: signal.connect,\n                emit: function () {\n                    throw new Error(\"[\" + name + \"] Cannot emit a locked signal.\");\n                },\n                lock: function (aKey) {\n                    throw new Error(\"[\" + name + \"] Cannot lock a locked signal.\");\n                },\n                unlock: function (aKey) {\n                    if (aKey === key) {\n                        return signal;\n                    }\n                    throw new Error(\"[\" + name + \"] Failed to unlock a locked signal.\");\n                }\n            };\n        },\n        \n        unlock: function (key) {\n            return this;\n        }\n    };\n};",
    "module.exports = function (handler) {\n    var connections = [];\n    \n    var slot = function (signal) {\n        var connection = signal.connect(handler);\n        connections.push(connection);\n        return connection;\n    };\n    \n    slot.disconnectAll = function () {\n        while (connections.length) {\n            connections.pop().disconnect();\n        }\n    };\n    \n    return slot;\n};"
  ]
}